---
title: Lab-2
author: "Owen Harlacker"
format: 
    html:
        code-fold: false
# editor: visual
---

## Data import and library loading

```{r}
library(tidyverse)
library(tidymodels)
library(ggplot2)

```

```{r}
housing_df <- read.csv('./data/housing.csv')
```

## Visualizations

Raw data table (first 10 rows)

```{r}
knitr::kable(head(housing_df, 10))
```

```{r}
ggplot(housing_df, aes(x=price))+geom_histogram()
```

```{r}

ggplot(housing_df, aes(x=area))+geom_histogram()
```

## Model formation

```{r}
library(skimr)
library(dat)
```

```{r}
rec <- recipe(area~price+bathrooms+guestroom, housing_df) |> step_log(c(area, price,bathrooms))
df2 <- rec |> prep() |> bake(housing_df)
```

```{r}
ggplot(df2, aes(x = area)) +
  geom_histogram()
```

```{r}
rec <- recipe(area~price+bathrooms+guestroom, housing_df) |>
  step_log(c(area, price)) |>
  step_dummy(all_nominal_predictors())
```

```{r}
dat2 <- rec |>
  prep() |>
  bake(housing_df)

names(dat2)
```

```{r}
fit1 <- lm(area~price+bathrooms+guestroom, data=df2)

```

```{r}
summary(fit1)
```

### Cross Validation

```{r}
dat_split <- initial_split(df2, prop = 0.75)
dat_train <- training(dat_split)
dat_test <- testing(dat_split)
```

### Model initiation

```{r}
lin_reg <- linear_reg()
```

```{r}
lr_fit <- lin_reg |> fit(area~price+bathrooms+guestroom, df2)
```

```{r}
predict(lr_fit, dat_test)
```

```{r}
pred_test <- predict(lr_fit, dat_test) |>
  bind_cols(dat_test |> select(area))
```

### Model evaluation

```{r}
ggplot(pred_test, aes(x = area, y = .pred)) +
  geom_point() +
  scale_x_continuous("Observed") +
  scale_y_continuous("Predicted") +
  geom_abline(aes(intercept = 0, slope = 1))
```

```{r}
pred_test %>% 
  rsq(truth = area, .pred)
```

```{r}
pred_test %>% 
  rmse(truth = area, .pred)
```

```{r}
pred_test %>% 
  mpe(truth = area, .pred)
```

```{r}
## K-fold (4 folds)
folds <- vfold_cv(housing_df, v = 4, strata = NULL, repeats = 1)
workflow <- workflow() %>%
  add_recipe(rec) %>%
  add_model(lin_reg)


results <- workflow %>%
  fit_resamples(resamples = folds, 
                metrics = metric_set(rmse, rsq))
collect_metrics(results)
```

## Trying a different model

```{r}
# Specify a different model
lasso_mod <- linear_reg(penalty = 0.001, mixture = 1) %>%
  set_engine("glmnet")
```

```{r}
workflow <- workflow() %>%
  add_recipe(rec) %>%
  add_model(lasso_mod)

# Fit and assess models using cross-validation
results <- workflow %>%
  fit_resamples(resamples = folds, metrics = metric_set(rmse))

collect_metrics(results)

```